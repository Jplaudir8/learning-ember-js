{
  "_from": "resolve@^1.17.0",
  "_id": "resolve@1.22.4",
  "_inBundle": false,
  "_integrity": "sha512-PXNdCiPqDqeUou+w1C2eTQbNfxKSuMxqTCuvlmmMsk1NWHL5fRrhY6Pl0qEYYc6+QqGClco1Qj8XnjPego4wfg==",
  "_location": "/resolve",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "resolve@^1.17.0",
    "name": "resolve",
    "escapedName": "resolve",
    "rawSpec": "^1.17.0",
    "saveSpec": null,
    "fetchSpec": "^1.17.0"
  },
  "_requiredBy": [
    "/@babel/helper-define-polyfill-provider",
    "/@ember-data/adapter/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/debug/ember-auto-import",
    "/@ember-data/debug/ember-cli-babel/resolve-package-path",
    "/@ember-data/debug/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/graph/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/json-api/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/legacy-compat/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/model/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/private-build-infra/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/request/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/serializer/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/store/ember-cli-version-checker/resolve-package-path",
    "/@ember-data/tracking/ember-cli-version-checker/resolve-package-path",
    "/@ember/string/ember-cli-version-checker/resolve-package-path",
    "/@ember/test-helpers/ember-cli-version-checker/resolve-package-path",
    "/@ember/test-waiters/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/@embroider/macros",
    "/@embroider/macros/ember-cli-version-checker/resolve-package-path",
    "/@glimmer/component/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/@glimmer/component/ember-cli-version-checker/resolve-package-path",
    "/babel-plugin-module-resolver",
    "/broccoli-stew",
    "/ember-auto-import",
    "/ember-cache-primitive-polyfill/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/ember-cached-decorator-polyfill/ember-cli-version-checker/resolve-package-path",
    "/ember-cli",
    "/ember-cli-app-version/ember-cli-version-checker/resolve-package-path",
    "/ember-cli-babel/babel-plugin-module-resolver",
    "/ember-cli-dependency-checker",
    "/ember-cli-inject-live-reload/resolve-package-path",
    "/ember-cli-test-loader/ember-cli-version-checker/resolve-package-path",
    "/ember-cli-typescript",
    "/ember-data/ember-auto-import",
    "/ember-data/ember-cli-babel/resolve-package-path",
    "/ember-data/ember-cli-version-checker/resolve-package-path",
    "/ember-fetch/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/ember-fetch/ember-cli-typescript",
    "/ember-inflector/ember-cli-version-checker/resolve-package-path",
    "/ember-load-initializers/ember-cli-typescript",
    "/ember-load-initializers/ember-cli-version-checker/resolve-package-path",
    "/ember-qunit/ember-cli-babel/resolve-package-path",
    "/ember-qunit/ember-cli-version-checker/resolve-package-path",
    "/ember-resolver/ember-cli-version-checker/resolve-package-path",
    "/ember-source",
    "/ember-source/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/ember-template-lint",
    "/ember-tracked-storage-polyfill/ember-cli-version-checker/resolve-package-path",
    "/eslint-plugin-n",
    "/hash-for-dep",
    "/hash-for-dep/resolve-package-path",
    "/qunit-dom/ember-cli-babel/ember-cli-version-checker/resolve-package-path",
    "/resolve-package-path",
    "/tracked-built-ins/ember-cli-typescript",
    "/tracked-built-ins/ember-cli-version-checker/resolve-package-path"
  ],
  "_resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.4.tgz",
  "_shasum": "1dc40df46554cdaf8948a486a10f6ba1e2026c34",
  "_spec": "resolve@^1.17.0",
  "_where": "/Users/joanperezlozano/Desktop/Workspace/emberjs-tutorial/node_modules/resolve-package-path",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bin": {
    "resolve": "bin/resolve"
  },
  "bugs": {
    "url": "https://github.com/browserify/resolve/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "is-core-module": "^2.13.0",
    "path-parse": "^1.0.7",
    "supports-preserve-symlinks-flag": "^1.0.0"
  },
  "deprecated": false,
  "description": "resolve like require.resolve() on behalf of files asynchronously and synchronously",
  "devDependencies": {
    "@ljharb/eslint-config": "^21.1.0",
    "array.prototype.map": "^1.0.5",
    "aud": "^2.0.3",
    "copy-dir": "^1.3.0",
    "eclint": "^2.8.1",
    "eslint": "=8.8.0",
    "in-publish": "^2.0.1",
    "mkdirp": "^0.5.5",
    "mv": "^2.1.1",
    "npmignore": "^0.3.0",
    "object-keys": "^1.1.1",
    "rimraf": "^2.7.1",
    "safe-publish-latest": "^2.0.0",
    "semver": "^6.3.1",
    "tap": "0.4.13",
    "tape": "^5.6.6",
    "tmp": "^0.0.31"
  },
  "funding": {
    "url": "https://github.com/sponsors/ljharb"
  },
  "homepage": "https://github.com/browserify/resolve#readme",
  "keywords": [
    "resolve",
    "require",
    "node",
    "module"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "resolve",
  "publishConfig": {
    "ignore": [
      ".github/workflows",
      "appveyor.yml"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/browserify/resolve.git"
  },
  "scripts": {
    "lint": "eslint --ext=js,mjs --no-eslintrc -c .eslintrc . 'bin/**'",
    "posttest": "npm run test:multirepo && aud --production",
    "prelint": "eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\.git')",
    "prepack": "npmignore --auto --commentLines=autogenerated && cp node_modules/is-core-module/core.json ./lib/ ||:",
    "prepublish": "not-in-publish || npm run prepublishOnly",
    "prepublishOnly": "safe-publish-latest",
    "pretest": "npm run lint",
    "pretests-only": "cd ./test/resolver/nested_symlinks && node mylib/sync && node mylib/async",
    "test": "npm run --silent tests-only",
    "test:multirepo": "cd ./test/resolver/multirepo && npm install && npm test",
    "tests-only": "tape test/*.js"
  },
  "version": "1.22.4"
}
